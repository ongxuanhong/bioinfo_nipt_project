classDiagram
    class User {
        +username: str
        +email: str
        +password: str
        +role: str
        +is_active: bool
        +created_at: datetime
        +last_login: datetime
        +authenticate()
        +get_role_permissions()
    }

    class Patient {
        +patient_id: str
        +first_name: str
        +last_name: str
        +date_of_birth: date
        +age: int
        +contact_number: str
        +email: str
        +created_at: datetime
        +updated_at: datetime
        +get_medical_history()
        +get_test_results()
    }

    class Pregnancy {
        +patient: Patient
        +gestational_age: int
        +last_menstrual_period: date
        +estimated_delivery_date: date
        +pregnancy_type: str
        +medical_conditions: str
        +notes: str
        +calculate_gestational_age()
        +update_pregnancy_info()
    }

    class Sample {
        +sample_id: str
        +patient: Patient
        +pregnancy: Pregnancy
        +collection_date: datetime
        +received_date: datetime
        +sample_type: str
        +volume: float
        +status: str
        +notes: str
        +validate_sample()
        +update_status()
    }

    class TestRun {
        +run_id: str
        +sample: Sample
        +start_time: datetime
        +end_time: datetime
        +status: str
        +pipeline_version: str
        +operator: User
        +qc_status: str
        +notes: str
        +start_run()
        +update_status()
        +get_run_metrics()
    }

    class SequencingData {
        +test_run: TestRun
        +total_reads: int
        +mapped_reads: int
        +duplicate_rate: float
        +gc_content: float
        +mean_coverage: float
        +uniformity: float
        +calculate_metrics()
        +validate_data()
    }

    class ChromosomalAnalysis {
        +test_run: TestRun
        +chromosome: str
        +z_score: float
        +normalized_coverage: float
        +fetal_fraction: float
        +confidence_interval: float
        +calculate_z_score()
        +assess_risk()
    }

    class TestResult {
        +test_run: TestRun
        +result_date: datetime
        +t13_risk: str
        +t18_risk: str
        +t21_risk: str
        +sex_chromosomes: str
        +fetal_sex: str
        +validated_by: User
        +status: str
        +generate_report()
        +validate_result()
    }

    class QualityControl {
        +test_run: TestRun
        +metric_name: str
        +value: float
        +threshold: float
        +status: str
        +check_date: datetime
        +validate_metric()
        +get_qc_status()
    }

    class PipelineRun {
        +test_run: TestRun
        +stage_name: str
        +start_time: datetime
        +end_time: datetime
        +status: str
        +log_file: str
        +parameters: json
        +execute_stage()
        +update_progress()
    }

    class Report {
        +test_result: TestResult
        +report_id: str
        +generated_date: datetime
        +report_type: str
        +content: json
        +status: str
        +generate_pdf()
        +send_notification()
    }

    class Notification {
        +recipient: User
        +subject: str
        +message: str
        +type: str
        +created_at: datetime
        +read_at: datetime
        +status: str
        +send()
        +mark_as_read()
    }

    User "1" -- "*" TestRun: operates
    User "1" -- "*" TestResult: validates
    Patient "1" -- "*" Sample: provides
    Patient "1" -- "*" Pregnancy: has
    Pregnancy "1" -- "*" Sample: associated_with
    Sample "1" -- "1" TestRun: analyzed_in
    TestRun "1" -- "1" SequencingData: generates
    TestRun "1" -- "*" ChromosomalAnalysis: produces
    TestRun "1" -- "1" TestResult: yields
    TestRun "1" -- "*" QualityControl: monitors
    TestRun "1" -- "*" PipelineRun: executes
    TestResult "1" -- "*" Report: generates
    User "1" -- "*" Notification: receives
